{"ast":null,"code":"let state = {\n  profilePage: {\n    postsData: [{\n      message: 'Hey',\n      id: 1,\n      likesCount: 23\n    }, {\n      message: 'I am here',\n      id: 2,\n      likesCount: 3\n    }, {\n      message: 'jupp',\n      id: 3,\n      likesCount: 10\n    }, {\n      message: 'Hey',\n      id: 4,\n      likesCount: 23\n    }, {\n      message: 'I am here',\n      id: 5,\n      likesCount: 3\n    }],\n    newPostText: ''\n  },\n  messagesPage: {\n    dialogsData: [{\n      name: 'Dima',\n      id: 1\n    }, {\n      name: 'Andrew',\n      id: 2\n    }, {\n      name: 'Mary',\n      id: 3\n    }],\n    messagesData: [{\n      message: 'Hi',\n      id: 1\n    }, {\n      message: 'How are you?',\n      id: 2\n    }, {\n      message: 'o',\n      id: 3\n    }],\n    newMessageText: 'now me'\n  }\n};\nexport const addPost = () => {\n  let newPost = {\n    id: 6,\n    message: state.profilePage.newPostText,\n    likesCount: 0\n  };\n  state.profilePage.postsData.push(newPost);\n  state.profilePage.newPostText = '';\n  rerenderEntireTree(state);\n};\nexport const updateNewPostText = newText => {\n  state.profilePage.newPostText = newText;\n  rerenderEntireTree(state);\n};\nexport const addMessage = () => {\n  let newMessage = {\n    id: 4,\n    message: state.messagesPage.newMessageText\n  };\n  state.messagesPage.messagesData.push(newMessage);\n  state.messagesPage.newMessageText = '';\n  rerenderEntireTree(state);\n};\nexport const updateNewMessageText = newMessage => {\n  state.messagesPage.newMessageText = newMessage;\n  rerenderEntireTree(state);\n};\n\nlet rerenderEntireTree = () => {\n  console.log('State changed');\n};\n\nexport const subscribe = observer => {\n  rerenderEntireTree = observer;\n};\nwindow.state = state;\nexport default state;","map":{"version":3,"sources":["/Users/annazubareva/Desktop/Loftschool/why-not-react/first-project/my-app/src/redux/state.js"],"names":["state","profilePage","postsData","message","id","likesCount","newPostText","messagesPage","dialogsData","name","messagesData","newMessageText","addPost","newPost","push","rerenderEntireTree","updateNewPostText","newText","addMessage","newMessage","updateNewMessageText","console","log","subscribe","observer","window"],"mappings":"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","sourcesContent":["\r\nlet state = {\r\n    profilePage: {\r\n        postsData: [\r\n            {message: 'Hey', id: 1, likesCount: 23},\r\n            {message: 'I am here', id: 2, likesCount: 3},\r\n            {message: 'jupp', id: 3, likesCount: 10},\r\n            {message: 'Hey', id: 4, likesCount: 23},\r\n            {message: 'I am here', id: 5, likesCount: 3}\r\n        ],\r\n        newPostText: ''       \r\n    },\r\n\r\n    messagesPage: {\r\n        dialogsData: [\r\n            {name: 'Dima', id: 1},\r\n            {name: 'Andrew', id: 2},\r\n            {name: 'Mary', id: 3}\r\n        ],\r\n        messagesData: [\r\n            {message: 'Hi', id: 1},\r\n            {message: 'How are you?', id: 2},\r\n            {message: 'o', id: 3}\r\n        ],\r\n        newMessageText: 'now me'\r\n    }    \r\n};\r\n\r\nexport const addPost = () => {\r\n    let newPost = {\r\n        id: 6,\r\n        message: state.profilePage.newPostText,\r\n        likesCount: 0\r\n    };\r\n\r\n    state.profilePage.postsData.push(newPost);\r\n    state.profilePage.newPostText = '';\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport const updateNewPostText = (newText) => {\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport const addMessage = () => {\r\n    let newMessage = {\r\n        id: 4,\r\n        message: state.messagesPage.newMessageText\r\n    };\r\n\r\n    state.messagesPage.messagesData.push(newMessage);\r\n    state.messagesPage.newMessageText = '';\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport const updateNewMessageText = (newMessage) => {\r\n    state.messagesPage.newMessageText = newMessage;\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nlet rerenderEntireTree = () => {\r\n    console.log('State changed');\r\n}\r\n\r\nexport const subscribe = (observer) => {\r\n    rerenderEntireTree = observer; \r\n}\r\n\r\nwindow.state = state;\r\n\r\nexport default state;"]},"metadata":{},"sourceType":"module"}